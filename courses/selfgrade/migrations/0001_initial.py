# Generated by Django 5.0.8 on 2024-08-11 17:05

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssignedProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='The order of this problem within the assignment.')),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_at', models.DateTimeField(help_text='The date and time the assignment is due.')),
                ('self_grades_due_at', models.DateTimeField(help_text='The date and time that assignment self-grades are due.')),
                ('name', models.CharField(help_text='The name or title of the assignment.', max_length=100)),
                ('statement_pdf', models.FileField(blank=True, help_text='PDF file containing the assignment statement.', upload_to='assignment_statements/')),
                ('solution_pdf', models.FileField(blank=True, help_text='PDF file containing the assignment solution.', upload_to='assignment_solutions/')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the course.', max_length=100)),
                ('description', models.TextField(blank=True, help_text='A description of the course content.')),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name or title of the problem.', max_length=100)),
                ('num_parts', models.PositiveSmallIntegerField(default=1, help_text='The number of parts (sub-problems) of the problem')),
                ('statement_tex', models.TextField(help_text='LaTeX source for the problem statement.')),
                ('solution_tex', models.TextField(help_text='LaTeX source for the problem solution.')),
                ('statement_pdf', models.FileField(blank=True, help_text='PDF file containing the problem statement.', upload_to='problem_statements/')),
                ('solution_pdf', models.FileField(blank=True, help_text='PDF file containing the problem solution.', upload_to='problem_solutions/')),
                ('notes', models.TextField(blank=True, help_text='Additional notes or comments about the problem.')),
            ],
        ),
        migrations.CreateModel(
            name='AssignedPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(help_text='The order of this part within the problem.')),
                ('points', models.PositiveIntegerField(default=4, help_text='The number of points this part is worth.')),
                ('assigned_problem', models.ForeignKey(help_text='The assigned problem this part is associated with', on_delete=django.db.models.deletion.CASCADE, to='selfgrade.assignedproblem')),
            ],
            options={
                'unique_together': {('assigned_problem', 'number')},
            },
        ),
        migrations.AddField(
            model_name='assignedproblem',
            name='assignment',
            field=models.ForeignKey(help_text='The assignment this problem is part of.', on_delete=django.db.models.deletion.PROTECT, to='selfgrade.assignment'),
        ),
        migrations.AddField(
            model_name='assignment',
            name='course',
            field=models.ForeignKey(help_text='The course this assignment belongs to.', on_delete=django.db.models.deletion.CASCADE, to='selfgrade.course'),
        ),
        migrations.AddField(
            model_name='assignedproblem',
            name='problem',
            field=models.ForeignKey(help_text='The problem assigned.', on_delete=django.db.models.deletion.PROTECT, to='selfgrade.problem'),
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(help_text='The course the user is registered in.', on_delete=django.db.models.deletion.CASCADE, to='selfgrade.course')),
                ('user', models.ForeignKey(help_text='The user who is registered.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_submission', models.FileField(blank=True, help_text='PDF file of the initial submission.', null=True, upload_to='initial_submissions/')),
                ('graded_submission', models.FileField(blank=True, help_text='PDF file of the graded submission.', null=True, upload_to='graded_submissions/')),
                ('reviewed_submission', models.FileField(blank=True, help_text='PDF file of the reviewed submission.', null=True, upload_to='reviewed_submissions/')),
                ('submitted_at', models.DateTimeField(blank=True, help_text='The date and time the submission was made.  Null prior to submission.', null=True)),
                ('graded_at', models.DateTimeField(blank=True, help_text='The date and time the submission was graded.  Null prior to grading.', null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='The date and time the submission was reviewed.  Null prior to review.', null=True)),
                ('assignment', models.ForeignKey(help_text='The assignment this is a submission for.', on_delete=django.db.models.deletion.CASCADE, to='selfgrade.assignment')),
                ('registration', models.ForeignKey(help_text='The registration this submission is associated with.', on_delete=django.db.models.deletion.CASCADE, to='selfgrade.registration')),
            ],
            options={
                'unique_together': {('registration', 'assignment')},
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the topic.', max_length=100)),
                ('parent', models.ForeignKey(blank=True, help_text='The parent topic, if any. Null for root topics.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='selfgrade.topic')),
            ],
        ),
        migrations.AddField(
            model_name='problem',
            name='topic',
            field=models.ForeignKey(blank=True, help_text='The topic this problem belongs to.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='selfgrade.topic'),
        ),
        migrations.AlterUniqueTogether(
            name='assignedproblem',
            unique_together={('assignment', 'number'), ('assignment', 'problem')},
        ),
        migrations.CreateModel(
            name='GradedPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('self_grade', models.PositiveSmallIntegerField(blank=True, help_text="The student's self-assessment grade for this part.", null=True)),
                ('grade_guess', models.PositiveSmallIntegerField(blank=True, help_text="The student's guess of the grader's grade for this part.", null=True)),
                ('guess_confidence', models.PositiveSmallIntegerField(blank=True, help_text="The student's confidence in their grade guess (1-5 scale).", null=True)),
                ('grade', models.PositiveSmallIntegerField(blank=True, help_text='The actual grade given by the grader for this part.', null=True)),
                ('assigned_part', models.ForeignKey(help_text='The specific part being graded.', on_delete=django.db.models.deletion.CASCADE, to='selfgrade.assignedpart')),
                ('submission', models.ForeignKey(help_text='The submission being graded.', on_delete=django.db.models.deletion.CASCADE, to='selfgrade.submission')),
            ],
            options={
                'unique_together': {('submission', 'assigned_part')},
            },
        ),
    ]
